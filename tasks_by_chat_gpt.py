# #
# 1 –ó–∞–¥–∞—á–∞:
# # –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª –∏ –≤—ã–≤–æ–¥–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ.
# # –ï—Å–ª–∏ —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –Ω–µ—Ç, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ "–ù–µ—Ç —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª".
#
# # –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: 3 7 2 8 1
# # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ: 8
# #
# # –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: 3 7 1
# # –ù–µ—Ç —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª
# numbers = []
# numbers = input("Enter your number by Space: ").split(" ")
# numbers = [int(num) for num in numbers]
# even_numbers = [num for num in numbers if num % 2 == 0]
# print("Your max. number is: ", max(numbers))
import re
from os import remove

# 2 –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Ç—Ä–æ–∫—É –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ.
# # –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –ø–µ—Ä–≤–æ–µ –∏–∑ –Ω–∏—Ö.
#
# # –í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: –Ø –∏–∑—É—á–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Python
# # –°–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ
# # –í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: –ö–æ—Ç —Å–ø–∏—Ç –Ω–∞ –æ–∫–Ω–µ
# # –°–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: –æ–∫–Ω–æ
#
# user_text = input("Enter your text: ")
# words = user_text.split()
# langest_word = max(words, key=len)
# print("Your langest word is: ", langest_word)

# 3 –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º (—á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ –∏ —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ).
# #
# # –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: 12321
# # –ß–∏—Å–ª–æ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.
# #
# # –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: 12345
# # –ß–∏—Å–ª–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.
#
# user_number = input("Enter your number: ")
# if user_number == user_number[::-1]:
#     print("This is palindrome!")
# else:
#     print("This is not palindrome")


#4 –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–æ–∑—Ä–∞—Å—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç, –∫ –∫–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–Ω –æ—Ç–Ω–æ—Å–∏—Ç—Å—è:
#
# 0‚Äì12 –ª–µ—Ç ‚Üí –†–µ–±–µ–Ω–æ–∫
# 13‚Äì17 –ª–µ—Ç ‚Üí –ü–æ–¥—Ä–æ—Å—Ç–æ–∫
# 18‚Äì64 –≥–æ–¥–∞ ‚Üí –í–∑—Ä–æ—Å–ª—ã–π
# 65 –∏ —Å—Ç–∞—Ä—à–µ ‚Üí –ü–µ–Ω—Å–∏–æ–Ω–µ—Ä
# –ú–µ–Ω—å—à–µ 0 ‚Üí –û—à–∏–±–∫–∞
#
# user_age = int(input("Enter your age: "))
# if user_age < 0:
#     print("Error")
# elif 0 <= user_age <= 12:
#     print("You are a child!")
# elif 13 <= user_age <= 17:
#     print("You are a teenager!")
# elif 18 <= user_age <= 64:
#     print("You are a adult")
# else:
#     print("You are old")

#5 –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ —á–µ—Ç–Ω—ã–º –∏–ª–∏ –Ω–µ—á–µ—Ç–Ω—ã–º –∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º.
# –ï—Å–ª–∏ —á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ –Ω—É–ª—é, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ "–ß–∏—Å–ª–æ —Ä–∞–≤–Ω–æ 0".

# user_number = int(input("Enter your number: "))
# if user_number == 0:
#     print(f"Your number:{user_number} is 0")
# elif 0 < user_number:
#     print(f"Your number:{user_number} is positive")
# elif 0 > user_number:
#     print(f"Your number:{user_number} is negative")
# if user_number % 2 == 0:
#     print(f"Your number:{user_number} is even")
# else:
#     print(f"You number:{user_number} is odd")

# 6
# –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç—Ä–∏ —Å—Ç–æ—Ä–æ–Ω—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –∏–∑ –Ω–∏—Ö —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫.
# üìå –£—Å–ª–æ–≤–∏–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞:
# –°—É–º–º–∞ –ª—é–±—ã—Ö –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ —Ç—Ä–µ—Ç—å–µ–π.
# –¢–æ –µ—Å—Ç—å, –µ—Å–ª–∏ —Å—Ç–æ—Ä–æ–Ω—ã a, b, c, —Ç–æ –¥–æ–ª–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è:
# a + b > c
# a + c > b
# b + c > a

# user_value1 = int(input("Enter 1 value for triangle: "))
# user_value2 = int(input("Enter 2 value for triangle: "))
# user_value3 = int(input("Enter 3 value for triangle: "))
# if (user_value1 + user_value2 > user_value3 and
#         user_value1 + user_value3 > user_value2 and
#         user_value2 + user_value3 > user_value1):
#     print("This is triangle!")
# else:
#     print("This is not triangle!")

#7 –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ –∑–∞—Ç–µ–º:
# –ù–∞—Ö–æ–¥–∏—Ç —Å—É–º–º—É –≤—Å–µ—Ö —á–∏—Å–µ–ª.
# –ù–∞—Ö–æ–¥–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.
# –°–æ–∑–¥–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–æ–ª—å–∫–æ –∏–∑ —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª.
# –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã:

# –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: 4 7 1 8 3 10
# –°—É–º–º–∞ –≤—Å–µ—Ö —á–∏—Å–µ–ª: 33
# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: 10
# –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: 1
# –ß–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞: [4, 8, 10]

# user_numbers = [int(num) for num in input("Enter your numbers: ").split(" ")]
# numbers_sum = sum(user_numbers)
# max_min_numbers = max(user_numbers), min(user_numbers)
# even_numbers = [num for num in user_numbers if num % 2 == 0]
# print(f"All numbers sum: {numbers_sum}, max/min value: {max_min_numbers}, your even numbers: {even_numbers}")

#8 –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è:
#
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª.
# –°–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é.
# –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –∏–∑ —ç—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞.
# –í—ã–≤–æ–¥–∏—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏ –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏.
# –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã:

# –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: 3 5 2 3 8 5 2 1 9
# –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫: [1, 2, 2, 3, 3, 5, 5, 8, 9]
# –°–ø–∏—Å–æ–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª: [1, 2, 3, 5, 8, 9]
#
# user_numbers = [int(num) for num in input("Enter your numbers with <Space>: ").split(" ")]
# user_numbers.sort()
# unique_numbers = sorted(set(user_numbers))
# print(f"Your numbers: {user_numbers}, unique numbers: {unique_numbers}")

#9 –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è:
#
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª.
# –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞, –Ω–æ —É–º–Ω–æ–∂–µ–Ω–Ω—ã–µ –Ω–∞ 2.
# –í—ã–≤–æ–¥–∏—Ç –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫.

# –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: -1 2 -3 4 5 -6
# –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫: [4, 8, 10]

# user_numbers = [int(num) for num in input("Enter your numbers: ").split()]
# multiply_numbers = [num * 2 for num in user_numbers]
# print(f"Your multiply values: {multiply_numbers}")

#10 –ó–∞–¥–∞—á–∞: –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —á–∞–µ–≤—ã—Ö
# –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
# –û–±—â—É—é —Å—É–º–º—É —Å—á—ë—Ç–∞ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ
# –ü—Ä–æ—Ü–µ–Ω—Ç —á–∞–µ–≤—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω —Ö–æ—á–µ—Ç –æ—Å—Ç–∞–≤–∏—Ç—å
# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å —Å—á—ë—Ç
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞:
#
# –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—É–º–º—É —á–∞–µ–≤—ã—Ö.
# –î–æ–±–∞–≤–∏—Ç—å –µ—ë –∫ –æ–±—â–µ–π —Å—É–º–º–µ —Å—á—ë—Ç–∞.
# –†–∞–∑–¥–µ–ª–∏—Ç—å —Å—É–º–º—É –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫.
# –í—ã–≤–µ—Å—Ç–∏ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –¥–æ–ª–∂–µ–Ω –∑–∞–ø–ª–∞—Ç–∏—Ç—å –∫–∞–∂–¥—ã–π.

# –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—á—ë—Ç–∞: 100
# –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç —á–∞–µ–≤—ã—Ö: 10
# –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫: 2
# –ö–∞–∂–¥—ã–π –¥–æ–ª–∂–µ–Ω –∑–∞–ø–ª–∞—Ç–∏—Ç—å: 55.0

# order_sum = int(input("Enter your order price: "))
# tips_percent = int(input("How many tips in % you want to give?: "))
# guests = int(input("How many guests were served?: "))
# if tips_percent >= 0 and order_sum > 0 and guests > 0:
#     tips = order_sum * tips_percent / 100
#     total_sum = order_sum + tips
#     print(f"Total price for each guest: {total_sum / guests:.1f}")

# 11 –ó–∞–¥–∞—á–∞: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
# –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è:
#
# –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–∞—Ä–æ–ª—å.
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –æ–Ω —Å–ª–µ–¥—É—é—â–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º:
# –î–ª–∏–Ω–∞ –æ—Ç 8 –¥–æ 16 —Å–∏–º–≤–æ–ª–æ–≤.
# –°–æ–¥–µ—Ä–∂–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É.
# –°–æ–¥–µ—Ä–∂–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –∑–∞–≥–ª–∞–≤–Ω—É—é –±—É–∫–≤—É.
# –°–æ–¥–µ—Ä–∂–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Å—Ç—Ä–æ—á–Ω—É—é –±—É–∫–≤—É.
# –í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞—Ä–æ–ª—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.

# –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç—ã:
# pgsql
# Enter a password: qwerty
# Password is too weak!
# pgsql
# Enter a password: Qwerty123
# Password is strong! ‚úÖ

# user_pass = input("Create your password: ")
# pass_lenth = len(user_pass)
# if pass_lenth < 8 or pass_lenth > 16 or user_pass.strip() =="":
#     print("Invalid password")
# if re.search(r"[0-9]", user_pass):
#     print("Your password contains at least 1 number")                                                           #number
# else:
#     print(print("Your password contains not any number"))
# if re.search(r"[A-Z]", user_pass):
#     print("Your pass contains at least 1 big letter")                                                           #Bletter
# else:
#     print(print("Your pass contains not any big letter"))
# if re.search(r"[a-z]", user_pass):
#     print("Your pass contains at least 1 small letter")                                                         #Sletter
# else:
#     print(print("Your pass contains not any small letter"))

# 12 –ó–∞–¥–∞—á–∞: –ò–≥—Ä–∞ "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ" üé≤
# –£—Å–ª–æ–≤–∏–µ:
#
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100.
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—ã—Ç–∞–µ—Ç—Å—è —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ.
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–∞—ë—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏:
# –ï—Å–ª–∏ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ ‚Üí "–ë–æ–ª—å—à–µ!"
# –ï—Å–ª–∏ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ ‚Üí "–ú–µ–Ω—å—à–µ!"
# –ï—Å–ª–∏ —á–∏—Å–ª–æ —É–≥–∞–¥–∞–Ω–æ ‚Üí "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ!"
# –ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–≥–∞–¥–∞–µ—Ç —á–∏—Å–ª–æ.

# key_number = 73
# while True:
#     user_number = int(input("Guess the number (1-100): "))
#     if user_number >= 100 or user_number <= 0:
#         print("Invalid number!")
#     elif user_number == key_number:
#         print("You win! Its correct number")
#         break
#     elif user_number < key_number:
#         print("More!")
#     elif user_number > key_number:
#         print("Less!")
#
#13 3–∞–¥–∞—á–∞: –°–∏—Å—Ç–µ–º–∞ —É—á—ë—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ üë©‚Äçüíªüë®‚Äçüíª
# –£—Å–ª–æ–≤–∏–µ:
# –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è —É—á—ë—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç:

# –ü–æ–∑–≤–æ–ª—è—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö.
# –°–æ—Ö—Ä–∞–Ω—è—Ç—å –∏—Ö –≤ —Å–ø–∏—Å–æ–∫.
# –ü–æ–∑–≤–æ–ª—è—Ç—å –∏—Å–∫–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ –∏–º–µ–Ω–∏.
# –í—ã–≤–æ–¥–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö.

# –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã:
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–∏–º—è, –¥–æ–ª–∂–Ω–æ—Å—Ç—å, –≤–æ–∑—Ä–∞—Å—Ç).
# –ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ –∏–º–µ–Ω–∏.
# –í—ã–≤–æ–¥ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.
# comp_workers = [["Ivanov", "Developer", 28], ["Petrov", "Team lead", 50], ["Sydorov", "Fixer", 20],
#                 ["Koval", "Cleaner", 35]]
#
# while True:
#
#     print("\n–°–∏—Å—Ç–µ–º–∞ —É—á—ë—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –∫–æ–º–ø–∞–Ω–∏–∏")
#     print("1. –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")
#     print("2. –ù–∞–π—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ –∏–º–µ–Ω–∏")
#     print("3. –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
#     print("4. –£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
#     print("5. –í—ã—Ö–æ–¥ —Å —Å–∏—Å—Ç–µ–º—ã")
#
#     case = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–ø—Ü–∏–∏(1-4): ")
#
#
#     match case:
#         case "1":
#             if comp_workers:
#                 print("\n –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:")
#             for worker in comp_workers:
#                 print(f"–ò–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: {worker[0]}, –î–æ–ª–∂–Ω–æ—Å—Ç—å: {worker[1]}, –í–æ–∑—Ä–∞—Å—Ç: {worker[2]}")
#
#
#         case "2":
#             search_name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: ")
#             found = False
#             for worker in comp_workers:
#                 if worker[0].lower() == search_name.lower():
#                     print(f"–ù–∞–π–¥–µ–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫: {worker[0]} - {worker[1]} - {worker[2]}")
#                     found = True
#                 if not found:
#                     print("–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
#
#                 break
#
#         case "3":
#             add_worker = input("–í–ø–∏—à–∏—Ç–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –§–∞–º–∏–ª–∏—é, –î–æ–ª–∂–Ω–æ—Å—Ç—å, –í–æ–∑—Ä–∞—Å—Ç –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: ").split(", ")
#             if len(add_worker) == 3:
#                 try:
#                     add_worker[2] = int(add_worker[2])
#                     comp_workers.append(add_worker)
#                     print(f"–ù–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ {add_worker} —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É!")
#                 except ValueError:
#                     print("–û—à–∏–±–∫–∞! –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
#
#         case "4":
#             delete_worker = input("–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ")
#             delete = False
#             for worker in comp_workers:
#                 if worker[0].lower() == delete_worker.lower():
#                     comp_workers.remove(worker)
#                     print(f"–£–∫–∞–∑–∞–Ω–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ {delete_worker} —É–¥–∞–ª–µ–Ω —Å –ë–î")
#                     delete = True
#                     break
#                 if not delete:
#                     print("–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
#
#         case "5":
#             print("–°–µ–∞–Ω—Å –∑–∞–≤–µ—Ä—à–µ–Ω!")
#             break


# 14 üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é multiply_numbers(a, b), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ.
#
# –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏:
# print(multiply_numbers(4, 5))   # 20
# print(multiply_numbers(-3, 6))  # -18
# print(multiply_numbers(0, 10))  # 0
# numbers = ((4,5), )
#
# def multiply_numbers(a, b):
#     return a * b
# print(multiply_numbers(4, 5))   # 20
# print(multiply_numbers(-3, 6))  # -18
# print(multiply_numbers(0, 10))  # 0

#15 üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é is_even(number), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –æ–Ω–æ —á—ë—Ç–Ω–æ–µ, –∏ False, –µ—Å–ª–∏ –Ω–µ—á—ë—Ç–Ω–æ–µ.

# def is_even(number):
#     return number % 2 == 0
#
#
# print(is_even(4))   # True
# print(is_even(7))   # False
# print(is_even(0))   # True

# 15 üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é count_vowels(text), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–ª–∞—Å–Ω—ã—Ö –±—É–∫–≤ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ.
# –ì–ª–∞—Å–Ω—ã–µ: a, e, i, o, u (–≤ –Ω–∏–∂–Ω–µ–º –∏ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ).

# def count_vowels(text):
#     count_vowels = 0
#     vowels = "aeiouAEIOU"
#     for sym in text:
#         if sym in vowels:
#             count_vowels += 1
#
#     return  count_vowels
#
# print(count_vowels("Hello World"))   # 3
# print(count_vowels("Python"))        # 1
# print(count_vowels("AEIOUaeiou"))    # 10

# üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é count_numbers(text), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª –≤ –Ω–µ–π.
# –ß–∏—Å–ª–æ–º —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–∏—Ñ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, "123", "456"). –ï—Å–ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ –µ—Å—Ç—å —Å–∏–º–≤–æ–ª—ã, –Ω–µ —è–≤–ª—è—é—â–∏–µ—Å—è —Ü–∏—Ñ—Ä–∞–º–∏, –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω—ã.
# def count_numbers(text):
#     count_num = 0
#     words = text.split()
#     for word in words:
#         if word.isdigit():
#             count_num += 1
#
#     return count_num
#
# print(count_numbers("I have 2 apples and 3 bananas"))   # 2
# print(count_numbers("There are 4 dogs and 1 cat"))      # 2
# print(count_numbers("No numbers here!"))                # 0


# –ó–∞–¥–∞—á–∞: –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
# üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é convert_temperature(temp, scale), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É temp –∏ —à–∫–∞–ª—É scale
# ("C" –¥–ª—è –¶–µ–ª—å—Å–∏—è –∏–ª–∏ "F" –¥–ª—è –§–∞—Ä–µ–Ω–≥–µ–π—Ç–∞). –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤ –¥—Ä—É–≥–æ–π —à–∫–∞–ª–µ.
# –ï—Å–ª–∏ –≤—Ö–æ–¥–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–∞–Ω–∞ –≤ –¶–µ–ª—å—Å–∏—è—Ö, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –µ—ë –≤ –§–∞—Ä–µ–Ω–≥–µ–π—Ç—ã.
# –ï—Å–ª–∏ –≤—Ö–æ–¥–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–∞–Ω–∞ –≤ –§–∞—Ä–µ–Ω–≥–µ–π—Ç–∞—Ö, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –µ—ë –≤ –¶–µ–ª—å—Å–∏—è—Ö.
# –§–æ—Ä–º—É–ª—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞:
# –¶–µ–ª—å—Å–∏–π –≤ –§–∞—Ä–µ–Ω–≥–µ–π—Ç: (temp * 9/5) + 32
# –§–∞—Ä–µ–Ω–≥–µ–π—Ç –≤ –¶–µ–ª—å—Å–∏–π: (temp - 32) * 5/9

# def convert_temperature(temp, scale):
#     if scale == "C":
#         convert = (temp * 9/5) + 32
#     elif scale == "F":
#         convert = (temp - 32) * 5/9
#     else:
#         "Invalid scale"
#     return convert
#
#
# print(convert_temperature(100, "C"))  # 212.0
# print(convert_temperature(32, "F"))   # 0.0
# print(convert_temperature(0, "C"))    # 32.0
#
#
# –ó–∞–¥–∞—á–∞: –û–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤
# üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é reverse_words(text), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—Å–µ —Å–ª–æ–≤–∞ –∏–¥—É—Ç –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —Å–ª–æ–≤–æ ‚Äî —ç—Ç–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏–º–≤–æ–ª–æ–≤, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω–∞—è –ø—Ä–æ–±–µ–ª–∞–º–∏. –ù—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤, –∞ –Ω–µ –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ.

# def reverse_words(text):
#     words = text.split()
#     for word in words:
#         reversed_word = word[1:1]
#     return reversed_word
#
# print(reverse_words("Hello World"))      # "World Hello"
# print(reverse_words("Python is awesome"))  # "awesome is Python"
# print(reverse_words("I love coding"))      # "coding love I"


# –ó–∞–¥–∞—á–∞:
# –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é make_multiplier(factor), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ factor –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é, —É–º–Ω–æ–∂–∞—é—â—É—é –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –µ–π –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–∞ —ç—Ç–æ—Ç factor.

# def make_multiplier(factor):
#     def multi(num):
#         return num * factor
#     return multi
#
# double = make_multiplier(2)
# triple = make_multiplier(3)
# print(double(5))  # –í—ã–≤–æ–¥: 10
# print(triple(4))  # –í—ã–≤–æ–¥: 12

# –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é make_power(exponent), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç–µ–ø–µ–Ω—å exponent –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é, –≤–æ–∑–≤–æ–¥—è—â—É—é –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –≤ —ç—Ç—É —Å—Ç–µ–ø–µ–Ω—å.
# def make_power(exponent):
#     def power(num):
#         return num ** exponent
#     return power
#
# square = make_power(2)
# cube = make_power(3)
# print(square(4))  # –í—ã–≤–æ–¥: 16 (4^2)
# print(cube(2))    # –í—ã–≤–æ–¥: 8 (2^3)

